{"version":3,"sources":["script.js"],"names":["taskTitle","document","querySelector","taskDescription","taskAssignedTo","taskDueDate","taskDueTime","done","review","inProgress","toDo","newToDo","openNewTask","taskForm","taskContainer","taskModalForm","Task","id","title","description","assignedTo","date","time","status","TaskManager","tasks","taskId","parseInt","localStorage","getItem","setItem","task","push","refreshPage","clearAllFieldValues","clearValidations","statusStats","mynewtasks","JSON","parse","stringify","splice","findTaskIndex","taskIndex","i","length","taskManager","addEventListener","event","value","classList","add","checked","remove","saveButtonClicked","preventDefault","selectedStatus","validationTaskForm","item","addTask","editTask","$","modal","alert","formCancel","formClose","validation","notEmptyLongerThan","today","todayConvertor","dueDate","Date","target","setHours","boolean","number","counterTotalTask","totalNumber","getAllTask","clearAll","forEach","addTaskToPage","innerHTML","counterDone","filterTaskStatus","counterInReview","counterInProgress","counterToDo","findIndex","taskInArray","filter","window","html","taskElement","createRange","createContextualFragment","editTaskOnPage","deleteTaskOnPage","deleteTask","closest","checkbox","clearSelected","checkboxClicked","removeEventListener","append","tooltip","d","weekday","Array","day","getDay","months","todayMonth","getMonth","nth","n","todayDate","getDate","year","getFullYear","todayFullDate"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["// Input fields in the new task modal\nconst taskTitle = document.querySelector('#taskTitle');\nconst taskDescription = document.querySelector('#taskDescription');\nconst taskAssignedTo = document.querySelector('#taskAssignedTo');\nconst taskDueDate = document.querySelector('#taskDueDate');\nconst taskDueTime = document.querySelector('#taskDueTime');\n\n//Status radio button\nconst done = document.querySelector('#statusDone'); // Done\nconst review = document.querySelector('#statusReview'); // Review\nconst inProgress = document.querySelector('#statusInProgress'); // In Progress\nconst toDo = document.querySelector('#statusToDo'); // To Do\n\nconst newToDo = document.querySelector(\"#newToDo\"); // input box for new task\nconst openNewTask = document.querySelector(\"#openForm\"); // add task button to open new task form\nconst taskForm = document.querySelector(\"#taskForm\"); // new task form\n\nconst taskContainer = document.querySelector(\"#tasks\"); // container to display tasks\nconst taskModalForm = document.querySelector(\"#taskForm\"); // new task form\n\nclass Task {\n  constructor(id, title, description, assignedTo, date, time, status) {\n      this.id = id;\n      this.title = title;\n      this.description = description;\n      this.assignedTo = assignedTo;\n      this.date = date;\n      this.time = time;\n      this.status = status;\n  }\n}\n\nclass TaskManager {\n  constructor() {\n    this.tasks=[];\n\n    // Local Storage\n    this.taskId = parseInt(localStorage.getItem('taskId')) || 1;\n    localStorage.setItem('taskId',this.taskId);\n  }\n\n  addTask(title, description, assignedTo, date, time, status){ // take all input fields parameters\n    this.taskId++; // generated id = id + 1\n    const task = new Task(this.taskId, title, description, assignedTo, date, time, status); // assign all values including id to task\n    this.tasks.push(task); // push task to the tasks array\n    refreshPage(); // refresh the page (clears inner HTML and list the updated array)\n    clearAllFieldValues(); // clear all field value and assign null to fields and false to radio button value\n    clearValidations(); // removes all is-invalid and is-valid classes to the span elements\n    statusStats() // updates status counter\n\n    // Add to local storage\n    localStorage.setItem('taskId', this.taskId);\n    let mynewtasks = JSON.parse(localStorage.getItem(\"mytasks\")) || [];\n    mynewtasks.push(task);\n    localStorage.setItem(\"mytasks\", JSON.stringify(mynewtasks));\n  }\n\n  editTask(task){\n    this.tasks.splice(findTaskIndex(task),1,task); // at position of the index, remove 1 item and add task\n    refreshPage(); // clear innerHTML and add the updated array\n    clearAllFieldValues(); // clear all field value and make modal empty\n    clearValidations(); // clears all validation classes and span\n    statusStats(); // update status counter button on HTML\n  }\n\n  deleteTask(task){\n    let taskIndex = findTaskIndex(task);\n    let id = this.tasks[taskIndex].id;\n    this.tasks.splice(taskIndex,1); // deletes one index from the tasks array that matched the taskIndex\n    \n    // Local Storage - Delete\n    let mynewtasks = JSON.parse(localStorage.getItem(\"mytasks\"));\n    //alert(mynewtasks.length);\n    for (let i = 0; i < mynewtasks.length; i++) {\n             if (mynewtasks[i].id == id) {\n             mynewtasks.splice(i, 1);\n             localStorage.setItem(\"mytasks\",JSON.stringify(mynewtasks));\n             break;\n        }\n    }\n\n    refreshPage(); // clear innerHTML and creates a list of all the items in the array\n    statusStats(); // update status counter buttons\n  }\n\n}\n\nconst taskManager = new TaskManager(taskContainer);                       // created an instance of class Task Manager\n\n// New Task Input Box On Page Load\nopenNewTask.addEventListener(\"click\", function(event){ // add button clicked\n  clearAllFieldValues(); // all fields are cleared to null and radio button false\n  clearValidations(); // validation span cleared from the form\n  taskTitle.value = newToDo.value; // value from input box passed to new task title\n  if(taskTitle.value && taskTitle.value.length > 8){\n    taskTitle.classList.add(\"is-valid\"); // if task title is more than 8 characters, is-valid class assigned\n  } else {\n    taskTitle.classList.add(\"is-invalid\"); // else task title is-invalid is assigned\n  }\n  newToDo.value = null; //input box becomes null\n});\n\nfunction clearAllFieldValues(){ // clears all fields value and assigned false (fresh)\n  taskTitle.value = null;\n  taskDescription.value = null;\n  taskAssignedTo.value = null;\n  taskDueDate.value = null;\n  taskDueTime.value = null;\n  \n  done.checked = false;\n  review.checked = false;\n  inProgress.checked = false;\n  toDo.checked = true;\n}\n\nfunction clearValidations(){ // removes both is-invalid and is-valid class from all the fields\n  taskTitle.classList.remove(\"is-invalid\", \"is-valid\");\n  taskDescription.classList.remove(\"is-invalid\", \"is-valid\");\n  taskAssignedTo.classList.remove(\"is-invalid\", \"is-valid\");\n  taskDueDate.classList.remove(\"is-invalid\", \"is-valid\");\n}\n\ntaskModalForm.addEventListener(\"submit\", saveButtonClicked); // on clicking submit button on the new task form, saveButtonClicked function called\n\nfunction saveButtonClicked(event){\n  event.preventDefault(); // prevent default action for the submit button to trigger\n  const title = taskTitle.value; // assign values from input box to the array\n  const description = taskDescription.value;\n  const assignedTo = taskAssignedTo.value;\n  const date = taskDueDate.value;\n  const time = taskDueTime.value;\n  const status = selectedStatus(); // returns value for the radio button depending on the selection\n\n  if(validationTaskForm(title, description, assignedTo, date, status)){ // check all parameters passed to this function\n    if(!taskForm.classList.item(0)){ // if index does not match, go to add task\n     taskManager.addTask(title, description, assignedTo, date, time, status); // add task function\n    } else {\n      const id = taskForm.classList.item(0); // assigns array position 0 to the id (id=0)\n      const task = {id, title, description, assignedTo, date, time, status};\n      taskManager.editTask(task); // if index match, go to edit task\n\n    // Local Storage Update Task\n  \n    let mynewtasks = JSON.parse(localStorage.getItem(\"mytasks\"));\n    // alert(mynewtasks.length);\n    for (let i = 0; i < mynewtasks.length; i++) {\n      // alert(mynewtasks[i].id);\n      // alert(id);\n      if (mynewtasks[i].id == id) {\n        // alert(\"Inside For Loop\");\n        mynewtasks[i].title = title;\n        mynewtasks[i].description = description;\n        mynewtasks[i].assignedTo = assignedTo;\n        mynewtasks[i].date = date;\n        mynewtasks[i].time = time;\n        mynewtasks[i].status = status;\n        localStorage.setItem(\"mytasks\", JSON.stringify(mynewtasks));\n        break;\n      }\n    }\n\n    taskForm.classList.remove(`${id}`); // removed the class id from the task form\n    }\n    $(\"#newTaskInput\").modal(\"hide\"); // new task modal hidden\n  }  else {\n    alert(\"Please complete all fields.\"); // else alert to complete all fields\n  }\n    refreshPage(); // clear innerHTML and creates a list of all the items in the array\n    statusStats(); // update status counter buttons\n}\n\nconst formCancel=document.querySelector(\"#cancelButton\"); // assign modal cancel button to the variable\nconst formClose=document.querySelector(\"#close\"); // assign modal close button to the variable\n\nformCancel.addEventListener(\"click\", function(event){\n  const id = taskForm.classList.item(0); // assign array index to the modal\n  if (id){\n  taskForm.classList.remove(`${id}`); // remove the id class from the modal\n  }\n});\n\nformClose.addEventListener(\"click\", function(event){\n  const id = taskForm.classList.item(0); // assign array index to the modal\n  if (id){\n  taskForm.classList.remove(`${id}`); // remove the id class from the modal\n  }\n});\n\n// Status return\nfunction selectedStatus(){\n\n  if (done.checked){\n    return done.value; // returns values of \"Done\"\n  } else if (review.checked) {\n    return review.value; // returns value of \"In Review\"\n  } else if (inProgress.checked) {\n    return inProgress.value; // returns value of \"status-InProgress\"\n  } else if (toDo.checked) {\n    return toDo.value; // returns value of \"Done\"\n  } else {\n    return false;\n  }\n}\n\n//  Validation on input for boolean and assign class accordingly (is-invalid // is-valid)\n\n// checks if the title is more than 8 characters\ntaskTitle.addEventListener(\"input\", function(event){ \n  validation(notEmptyLongerThan(8));\n});\n\n// checks if the task description is more than 15 characters\ntaskDescription.addEventListener(\"input\", function(event){\n  validation(notEmptyLongerThan(15));\n});\n\n// checks if the assigned to is more than 8 characters\ntaskAssignedTo.addEventListener(\"input\", function(event){\n  validation(notEmptyLongerThan(8));\n});\n\n// checks if the due date is in the future\ntaskDueDate.addEventListener(\"input\", function(event){\n  const today = todayConvertor(); // get today's date\n  const dueDate = new Date(event.target.value); // get due date\n  validation(today <= dueDate); // returns value of boolean and assign class\n})\n\n// returns today's date with hours\nfunction todayConvertor(){\n  const today = new Date(); // get today's date \n  return today.setHours(0,0,0,0); // get current time\n}\n\n// validations boolean and remove/add class to element accordingly\nfunction validation(boolean){\n  if(boolean){\n    event.target.classList.remove(\"is-invalid\"); // remove class from element\n    event.target.classList.add(\"is-valid\"); // add class to element\n  } else {\n    event.target.classList.remove(\"is-valid\"); // remove class from element\n    event.target.classList.add(\"is-invalid\"); // add class to elements\n  }\n};\n\n//validation to check if value and length of characters are more than the (number)\nfunction notEmptyLongerThan (number){\n  return event.target.value && event.target.value.length > number;\n}\n\nfunction validationTaskForm(title, description, assignedTo, date, status){\n  const dueDate = new Date(date); // assign today's date by default to calendar picker\n  const today = todayConvertor(); // assign current time by default\n  if(title && title.length > 8){  // if title length is more than 8 characters\n    if(description && description.length > 15){ // if description is more than 15 characters\n      if(assignedTo && assignedTo.length > 8){ // if assignedTo is more than 8 characters\n        if(dueDate && today <= dueDate ){ // **\n          if(status){ // if status is true\n            return true; // validationTaskForm returns true\n          }  \n        }\n      }\n    }\n  }\n  return false; // else return false\n}\n\n// Total Counter - All Task\nconst counterTotalTask = document.querySelector(\"#counterTotalTask\"); // assign All Tasks button to counterTotalTask\nconst totalNumber = document.querySelector(\"#counterTotalTask > span\"); // assign span inside All Task Counter to totalNumber\ncounterTotalTask.addEventListener(\"click\", getAllTask); // onclick of All Tasks button\nfunction getAllTask(){\n  clearAll(); // clears innerHTML \n  taskManager.tasks.forEach(task => addTaskToPage(task)); // displays each task from the array\n  totalNumber.innerHTML = `${taskManager.tasks.length}`; // All Tasks total number is the length of the array\n}\n\n// Counter for Done\nconst counterDone = document.querySelector(\"#counterDone\"); // assign Done button to counterDone variable\ncounterDone.addEventListener(\"click\", function(){ // onclick Done button\n  filterTaskStatus(\"Done\"); // clears innerHTML, display all tasks with status === done\n});\n\n// Counter for Review\nconst counterInReview = document.querySelector(\"#counterInReview\"); // assign In Review button to counterInReview variable\ncounterInReview.addEventListener(\"click\", function(){ // onclick In Review button\n  filterTaskStatus(\"In Review\"); // clears innerHTML, display all tasks with status === review\n});\n\n// Counter for In Progress\nconst counterInProgress = document.querySelector(\"#counterInProgress\"); // assign In Progress button to counterInProgress variable\ncounterInProgress.addEventListener(\"click\", function(){ // onclick In Progress button\n  filterTaskStatus(\"In Progress\"); // clears innerHTML, display all tasks with status === inProgress\n});\n\n// Counter for To Do\nconst counterToDo = document.querySelector(\"#counterToDo\"); // assign To Do button to counterToDo variable\ncounterToDo.addEventListener(\"click\", function(){ // onclick To Do button\n  filterTaskStatus(\"To Do\"); // clears innerHTML, display all tasks with status === To Do\n});\n\n\nfunction filterTaskStatus(status){\n  clearAll(); // clears innerHTML\n  taskManager.tasks.forEach(function (task){ // display all task when passed parameter matches the status in the array\n    if (status === task.status){addTaskToPage(task)};\n  });\n}\n\nconst findTaskIndex = (task) => // finding index of a task\n  taskManager.tasks.findIndex(taskInArray => (taskInArray.id == task.id)); // returns the first index that matches the parameter\n\nfunction statusStats(){\n  totalNumber.innerHTML = `${taskManager.tasks.length}`; // gets total tasks in the array\n  counterDone.querySelector(\"span\").innerHTML=`${taskManager.tasks.filter(task => task.status === \"Done\").length}`; // done status counter\n  counterInReview.querySelector(\"span\").innerHTML=`${taskManager.tasks.filter(task => task.status === \"In Review\").length}`; // in review status counter\n  counterInProgress.querySelector(\"span\").innerHTML=`${taskManager.tasks.filter(task => task.status === \"In Progress\").length}`; // in progress status counter\n  counterToDo.querySelector(\"span\").innerHTML=`${taskManager.tasks.filter(task => task.status === \"To Do\").length}`; // to do status counter\n}\n\nfunction refreshPage(){\n  clearAll();  // clear innerHTML\n  let mynewtasks = JSON.parse(window.localStorage.getItem('mytasks')) || taskManager.tasks;\n  mynewtasks.forEach(task => addTaskToPage(task)); // list all current tasks from array\n}\n\nfunction clearAll(){\n  taskContainer.innerHTML = \"\"; // clears innerHTML\n}\n\nfunction addTaskToPage(task){  // adds HTML element to the page\n\n  // assign all the HTML Element code to html\n  const html = `\n\n  <div class=\"task\" id=\"task${task.id}\">\n    <div class=\"row\">\n\n      <div class=\"taskTitle col-lg-4 order-1 col-sm\">\n          <p class=\"text-left d-inline\">\n            <span class=\"h6 font-weight-bold\">${task.title}</span> \n          \n            <a href=\"#task${task.id}Description\" class=\"text-primary ml-1 pl-0 small\" data-toggle=\"collapse\" data-target=\"#task${task.id}Description\"><i class=\"fas fa-plus-circle fa-lg iconFloat\"></i></a>\n          </p>\n      </div>\n      \n      <div class=\"col-lg-8 order-2\">\n        <ul class=\"row taskSummary\">\n\n          <li class=\"order-3 col-sm col-md\">\n            <span class=\"spanDateTime\">${task.date}</span>\n          </li>\n\n          <li class=\"order-4 col-sm col-md\">\n            <span>${task.time}</span>\n          </li>\n        \n          <li class=\"order-5 col-sm col-md\">\n            <span class=\"badge badgeColor${task.status}\">${task.status}</span>\n          </li>\n        \n          <li class=\"order-6 col-sm col-md\">\n          ${task.assignedTo}\n          </li>\n        \n          <li class=\"order-7 col-sm col-md\">\n            <form class=\"removeBin\" action=\"\" method=\"post\">\n              <a href=\"#newTaskInput\" id=\"editTaskButton\" role=button class=\"d-inline btn btn-link ml-0 pl-0 mb-0 pb-0\" data-toggle=\"modal\" title=\"Edit Task\" data-target=\"#newTaskInput\">\n              <i class=\"fas fa-pen-square text-dark iconFloat fa-lg\"></i></a>\n              <input type=\"checkbox\" class=\"ml-2 pl-0 border border-info\">\n              <button type=\"button\" class=\"ml-3 pl-0 btn btn-link removeBin\" id=\"deleteSingleTask\" data-toggle=\"\" data-placement=\"top\" title=\"Delete This Task\"><i class=\"fas fa-trash-alt fa-lg iconFloat iconDelete \"></i>\n              </button>\n              </form>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div id=\"task${task.id}Description\" class=\"collapse order-2 order-lg-2 order-md-2 order-sm-2\">\n          ${task.description}\n    </div>\n    <hr>\n  </div>`;\n  \n const taskElement = document.createRange().createContextualFragment(html); // passing html fragment to the page\n \n const editTaskOnPage = taskElement.querySelector(\"#editTaskButton\"); // assign Edit Task button to a variable\n  editTaskOnPage.addEventListener(\"click\", function(){ // onclick of edit task button\n    clearAllFieldValues(); // clear all field values from modal form\n    clearValidations(); // clear all validation spans\n    taskForm.classList.add(task.id); // task form class added with the task id index\n    taskTitle.value = task.title; // task title assigned to taskTitle.value\n    taskDescription.value = task.description; // task description assigned to taskAssigned.value\n    taskAssignedTo.value = task.assignedTo; // task assignedTo assigned to taskAssignedTo.value\n    taskDueDate.value = task.date; // task date assigned to taskDueDate.value\n    taskDueTime.value = task.time; // task time assigned to taskDueTime.value\n    \n    switch (task.status) { // checks if the task status matches with the case, if not default is selected\n      case 'Done': done.checked = true;\n      break;\n      case 'In Review': review.checked  = true;\n      break;\n      case 'In Progress': inProgress.checked  = true;\n      break;\n      default: toDo.checked  = true; // by default, To Do is selected \n    }\n\n  });\n\n  const deleteTaskOnPage = taskElement.querySelector('#deleteSingleTask'); // deletes single task on the page\n  deleteTaskOnPage.addEventListener(\"click\", function(){ // onclick of the delete single task icon\n    taskManager.deleteTask(task); // deletes the task of the given index\n    deleteTaskOnPage.closest(\"div.task\").remove(); // removes closed div in the task class\n  });\n\n  const checkbox = taskElement.querySelector('.removeBin > input[type=\"checkbox\"]'); // assign checkbox in the removeBin class to checkbox variable\n  const clearSelected = document.querySelector(\"#clearSelected\"); // assign Clear Selected button to clearSelected\n  clearSelected.addEventListener('click', checkboxClicked); // onclick of clear selected button, executed checkboxClicked function\n\n  function checkboxClicked (event){ // executed on Clear Selectd button onclick\n       if (checkbox.checked){ // if the checkbox is checked\n        taskManager.deleteTask(task); // deletes the task of the given index\n          checkbox.closest(\"div.task\").remove(); // removes the closes div in the task class\n          clearSelected.removeEventListener('click', checkboxClicked); // removes previously registered event listener\n           }\n         }\n         \n  taskContainer.append(taskElement); // append taskElement to the taskContainer in the HTML page\n  \n}\n\n$(function () {\n  $('[data-toggle=\"tooltip\"]').tooltip()\n})\n\n// Day and Date\nvar d = new Date(); // get the system date and store in variable\n\nvar weekday = new Array(7); // store 7 days of a week in an array\nweekday[0] = \"Sunday\";\nweekday[1] = \"Monday\";\nweekday[2] = \"Tuesday\";\nweekday[3] = \"Wednesday\";\nweekday[4] = \"Thursday\";\nweekday[5] = \"Friday\";\nweekday[6] = \"Saturday\";\nvar day = weekday[d.getDay()]; // get current day\n\nvar months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // store months in an array\nvar todayMonth = months[d.getMonth()]; // get current month\n\nconst nth = function(n) { // displays *st, *nd, *rd, *th depending on the date\n  if (n > 3 && n < 21) return 'th';\n  switch (n % 10) {\n    case 1:  return \"st\";\n    case 2:  return \"nd\";\n    case 3:  return \"rd\";\n    default: return \"th\";\n  }\n}\n\nvar todayDate = d.getDate();\nvar year = d.getFullYear();\nvar todayFullDate = todayDate + nth(todayDate) + \" \" + todayMonth + \" \" + year + \" - Happy \" + day + \"!\";\ndocument.querySelector(\"#todayDate\").innerHTML = todayFullDate;\n\nrefreshPage();"]}